{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { async, TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { DashboardComponent } from './dashboard.component';\ndescribe('Dashboard Component', () => {\n  let component;\n  let fixture;\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [DashboardComponent],\n      imports: [ReactiveFormsModule, RouterTestingModule, HttpClientModule, MatSnackBarModule, MatDialogModule]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(DashboardComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create a component', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should contain openDialog', () => {\n    expect(component.openDialog).toBeTruthy();\n  });\n  it('should contain DataSource', () => {\n    expect(component.dataSource).toBeTruthy();\n  });\n});","map":{"version":3,"sources":["D:/EMS/src/app/component/dashboard/dashboard.component.spec.ts"],"names":["HttpClientModule","async","TestBed","ReactiveFormsModule","MatDialogModule","MatSnackBarModule","RouterTestingModule","DashboardComponent","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","openDialog","dataSource"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,uBAA/B;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACAC,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AAClC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,CAACV,KAAK,CAAC,MAAM;AACnBC,IAAAA,OAAO,CAACU,sBAAR,CAA+B;AAC3BC,MAAAA,YAAY,EAAE,CAACN,kBAAD,CADa;AAE3BO,MAAAA,OAAO,EAAE,CACLX,mBADK,EAELG,mBAFK,EAGLN,gBAHK,EAILK,iBAJK,EAKLD,eALK;AAFkB,KAA/B,EASGW,iBATH;AAUH,GAXe,CAAN,CAAV;AAYAJ,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGR,OAAO,CAACc,eAAR,CAAwBT,kBAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACO,iBAApB;AACAP,IAAAA,OAAO,CAACQ,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClCC,IAAAA,MAAM,CAACX,SAAD,CAAN,CAAkBY,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClCC,IAAAA,MAAM,CAACX,SAAS,CAACa,UAAX,CAAN,CAA6BD,UAA7B;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClCC,IAAAA,MAAM,CAACX,SAAS,CAACc,UAAX,CAAN,CAA6BF,UAA7B;AACH,GAFC,CAAF;AAGH,CA7BO,CAAR","sourcesContent":["import { HttpClientModule } from '@angular/common/http';\r\nimport { async, TestBed } from '@angular/core/testing';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { DashboardComponent } from './dashboard.component';\r\ndescribe('Dashboard Component', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async(() => {\r\n        TestBed.configureTestingModule({\r\n            declarations: [DashboardComponent],\r\n            imports: [\r\n                ReactiveFormsModule,\r\n                RouterTestingModule,\r\n                HttpClientModule,\r\n                MatSnackBarModule,\r\n                MatDialogModule\r\n            ],\r\n        }).compileComponents();\r\n    }));\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(DashboardComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create a component', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should contain openDialog', () => {\r\n        expect(component.openDialog).toBeTruthy();\r\n    });\r\n    it('should contain DataSource', () => {\r\n        expect(component.dataSource).toBeTruthy();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}