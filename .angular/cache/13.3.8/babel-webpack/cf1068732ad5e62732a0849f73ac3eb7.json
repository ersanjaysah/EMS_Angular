{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { async, TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { SigninComponent } from './signin.component';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [SigninComponent],\n      imports: [ReactiveFormsModule, RouterTestingModule, HttpClientModule, MatSnackBarModule]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(SigninComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create a form using formbuilder', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should contain component', () => {\n    expect(component.loginForm).toBeTruthy();\n  });\n  it('should contain login form of default value', () => {\n    expect(component.loginForm.value).toEqual({\n      email: '',\n      password: ''\n    });\n  });\n});","map":{"version":3,"sources":["D:/EMS/src/app/component/signin/signin.component.spec.ts"],"names":["HttpClientModule","async","TestBed","ReactiveFormsModule","MatSnackBarModule","RouterTestingModule","SigninComponent","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","loginForm","value","toEqual","email","password"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,uBAA/B;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC7B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,CAACT,KAAK,CAAC,MAAM;AACnBC,IAAAA,OAAO,CAACS,sBAAR,CAA+B;AAC3BC,MAAAA,YAAY,EAAE,CAACN,eAAD,CADa;AAE3BO,MAAAA,OAAO,EAAE,CACLV,mBADK,EAELE,mBAFK,EAGLL,gBAHK,EAILI,iBAJK;AAFkB,KAA/B,EAQGU,iBARH;AASH,GAVe,CAAN,CAAV;AAWAJ,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGP,OAAO,CAACa,eAAR,CAAwBT,eAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACO,iBAApB;AACAP,IAAAA,OAAO,CAACQ,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AAC/CC,IAAAA,MAAM,CAACX,SAAD,CAAN,CAAkBY,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACjCC,IAAAA,MAAM,CAACX,SAAS,CAACa,SAAX,CAAN,CAA4BD,UAA5B;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,4CAAD,EAA+C,MAAM;AACnDC,IAAAA,MAAM,CAACX,SAAS,CAACa,SAAV,CAAoBC,KAArB,CAAN,CAAkCC,OAAlC,CAA0C;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAA1C;AACH,GAFC,CAAF;AAGH,CA5BO,CAAR","sourcesContent":["import { HttpClientModule } from '@angular/common/http';\r\nimport { async, TestBed } from '@angular/core/testing';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { SigninComponent } from './signin.component';\r\ndescribe('LoginComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async(() => {\r\n        TestBed.configureTestingModule({\r\n            declarations: [SigninComponent],\r\n            imports: [\r\n                ReactiveFormsModule,\r\n                RouterTestingModule,\r\n                HttpClientModule,\r\n                MatSnackBarModule\r\n            ],\r\n        }).compileComponents();\r\n    }));\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(SigninComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create a form using formbuilder', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should contain component', () => {\r\n        expect(component.loginForm).toBeTruthy();\r\n    });\r\n    it('should contain login form of default value', () => {\r\n        expect(component.loginForm.value).toEqual({ email: '', password: '' });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}